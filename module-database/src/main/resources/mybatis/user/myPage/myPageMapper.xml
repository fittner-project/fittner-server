<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.fittnerserver.mapper.user.myPage.MyPageMapper">
    <select id="selectReservationForSalesHeader" resultType="SalesResDto">
        /* MyPageMapper.selectReservationForSalesHeader */
        select concat(sum(price),'') as projection_sales_price
             , concat(sum(case when reservation_status = 'SIGN' or reservation_status = 'NOSHOW' then price
                                                                                                 else 0
                           end),'') as now_sales_price
          from (select a.reservation_status
                     , IFNULL(sum(truncate(a.trainer_settlement_amount, 0)), 0) as price
                  from reservation a
             left join ticket b
                    on a.ticket_id = b.ticket_id
                 where a.trainer_id = #{trainerId}
                   and a.center_id = #{centerId}
                   and substr(a.reservation_start_date, 1, 6) = #{reservationStartMonth}
                   and a.reservation_delete_yn = 'N'
                   and a.reservation_status in ('NOSHOW', 'SIGN')
              group by a.reservation_status

             union all

                select 'WATING'
                     , ifnull(sum(truncate(all_list.one_time_price * (all_list.trainer_settlement_percent / 100), 0)),0)
                  from (select a.reservation_status
                             , b.ticket_relay_yn
                             , c.trainer_settlement_code
                             , c.trainer_settlement_percent
                             , d.trainer_product_price
                             , d.trainer_product_count
                             , truncate(d.trainer_product_price / d.trainer_product_count, 0) as one_time_price
                          from reservation a
                     left join ticket b
                            on a.ticket_id = b.ticket_id
                     left join trainer_settlement c
                            on c.trainer_id = c.trainer_id
                           and a.trainer_settlement_id = c.trainer_settlement_id
                     left join trainer_product d
                            on b.trainer_product_id = d.trainer_product_id
                         where a.trainer_id = #{trainerId}
                           and a.center_id = #{centerId}
                           and substr(a.reservation_start_date, 1, 6) = #{reservationStartMonth}
                           and a.reservation_delete_yn = 'N'
                           and a.reservation_status = 'WAITING'
                       ) all_list
                ) a
    </select>

    <select id="selectReservationForSalesBody" resultType="SalesInfoResDto">
        /* MyPageMapper.selectReservationForSalesBody */
        select all_list.ticket_id
             , all_list.member_id
             , all_list.member_name
             , all_list.ticket_name
             , all_list.ticket_start_date
             , all_list.ticket_end_date
             , all_list.now_sales_price
             , all_list.ticket_use_cnt
          from (select b.ticket_id
                     , c.member_id
                     , c.member_name
                     , d.trainer_product_name as ticket_name
                     , b.ticket_start_date
                     , b.ticket_end_date
                     , concat(sum(a.trainer_settlement_amount),'') as now_sales_price
                     , count(*) as ticket_use_cnt
                     , row_number() over (order by b.ticket_start_date desc) AS row_num
                  from reservation a
             left join ticket b
                    on a.ticket_id = b.ticket_id
             left join member c
                    on a.member_id = c.member_id
             left join trainer_product d
                    on b.trainer_product_id = d.trainer_product_id
                 where a.trainer_id = #{trainerId}
                   and a.center_id = #{centerId}
                   and a.reservation_status in ('SIGN','NOSHOW')
                   and substr(a.reservation_start_date,1,6) = #{reservationStartMonth}
                   and a.reservation_delete_yn = 'N'
              group by b.ticket_id
                     , c.member_id
                     , c.member_name
                     , d.trainer_product_name
                     , b.ticket_start_date
                     , b.ticket_end_date
               ) all_list
         where all_list.row_num > case when #{currentPageNo} is null or #{currentPageNo}=0 or #{currentPageNo}=1 then 0 else (#{currentPageNo}-1)*10 end
           and all_list.row_num <![CDATA[<=]]> #{currentPageNo}*10
    </select>

    <select id="selectReservationForSalesBodyDetail" resultType="SalesInfoDetailDto">
        /* MyPageMapper.selectReservationForSalesBodyDetail */
        select all_list.ticket_id
             , all_list.member_name
             , substr(all_list.reservation_start_date,1,6) as reservation_month
             , all_list.reservation_start_date
             , all_list.reservation_end_date
             , all_list.reservation_start_time
             , all_list.reservation_end_time
             , all_list.trainer_settlement_amount as sales_price
             , all_list.reservation_status
             , all_list.row_num_asc as ticket_use_cnt
         from (select a.ticket_id
                    , b.member_name
                    , a.reservation_start_date
                    , a.reservation_end_date
                    , a.reservation_start_time
                    , a.reservation_end_time
                    , concat(a.trainer_settlement_amount,'') as trainer_settlement_amount
                    , a.reservation_status
                    , dense_rank() over (order by a.reservation_start_date , a.reservation_start_time) as row_num_asc
                    , row_number() over (order by a.reservation_start_date desc, a.reservation_start_time desc) as row_num
                 from reservation a
            left join member b
                   on a.member_id = b.member_id
                where a.ticket_id = #{ticketId}
                  and a.trainer_id = #{trainerId}
                  and a.reservation_status in ('SIGN','NOSHOW')
                  <if test="reservationMonth != 'TOTAL'">
                      and substr(a.reservation_start_date,1,6) = REGEXP_REPLACE(#{reservationMonth}, '[^0-9]', '')
                  </if>
                  and a.reservation_delete_yn = 'N'
              ) all_list
        where all_list.row_num > case when #{currentPageNo} is null or #{currentPageNo}=0 or #{currentPageNo}=1 then 0 else (#{currentPageNo}-1)*10 end
          and all_list.row_num <![CDATA[<=]]> #{currentPageNo}*10
    </select>

    <select id="selectNoticeByCenterIdAndTrainerId" resultType="NoticeResDto">
        /* MyPageMapper.selectNoticeByCenterIdAndTrainerId */
        select all_list.notice_id
             , all_list.notice_title
             , all_list.notice_content
             , all_list.notice_date
             , all_list.notice_read_yn
          from (select a.notice_id
                     , a.notice_title
                     , a.notice_content
                     , LEFT(REGEXP_REPLACE(a.created_date, '[^0-9]', ''), 8) as notice_date
                     , CASE WHEN b.notice_read_id is null THEN 'N'
                            ELSE 'Y'
                        END AS notice_read_yn
                     , ROW_NUMBER() OVER (ORDER BY a.created_date DESC) AS row_num
                  from notice a
             left join notice_read b
                    on a.notice_id = b.notice_id
                   and b.trainer_id = #{trainerId}
                 where a.center_id = #{centerId}
                ) all_list
            where all_list.row_num > case when #{currentPageNo} is null or #{currentPageNo}=0 or #{currentPageNo}=1 then 0 else (#{currentPageNo}-1)*10 end
              and all_list.row_num <![CDATA[<=]]> #{currentPageNo}*10
    </select>

    <select id="selectNoticeReadCountByNoticeIdAndTrainerId" resultType="int">
        /* MyPageMapper.selectNoticeReadCountByNoticeIdAndTrainerId */
        select count(*)
          from notice_read
         where notice_id = #{noticeId}
           and trainer_id = #{trainerId}
    </select>

    <insert id="insertNoticeRead">
        /* MyPageMapper.insertNoticeRead */
        insert into notice_read(
                    notice_read_id
                  , center_id
                  , notice_id
                  , trainer_id
                  , created_by
                  , created_date
          ) values (
                    UUID()
                  , #{centerId}
                  , #{noticeId}
                  , #{trainerId}
                  , 'system'
                  , CURRENT_TIMESTAMP
          )
    </insert>

    <select id="selectNoticeCountByNoticeId" resultType="int">
        /* MyPageMapper.selectNoticeCountByNoticeId */
        select count(*)
          from notice
         where notice_id = #{noticeId}
    </select>

    <select id="selectTerms" resultType="TermsDto">
        /* MyPageMapper.selectTerms */
        select a.terms_essential_yn
             , a.terms_title
             , b.file_url
             , a.terms_id
             , a.terms_start_date
             , a.terms_end_date
             , a.terms_kind
             , a.terms_state
          from terms a
     left join file b
            on a.file_group_id = b.file_group_id
         where 1=1
        <if test="termsState != 'TOTAL'">
            and terms_state = #{termsState}
        </if>
        <if test="termsKind != 'TOTAL'">
            and terms_kind = #{termsKind}
        </if>
      order by a.terms_start_date desc
    </select>

    <update id="updatePushSet">
        /* MyPageMapper.updatePushSet */
        update push_set
           set push_set_yn = #{pushSetYn}
             , modified_by = #{trainerId}
             , modified_date = CURRENT_TIMESTAMP
         where trainer_id = #{trainerId}
           and push_kind = #{pushKind}
    </update>

    <update id="updateTermsAgree">
        /* MyPageMapper.updatePushSet */
        with temp as (
            select a.terms_agree_id
              from terms_agree a
         left join terms b
                on a.terms_id = b.terms_id
             where a.trainer_id = #{trainerId}
               and b.terms_kind = 'ADVERTISE'
        )
        update terms_agree
           set terms_agree_yn = 'Y'
             , terms_id = #{termsId}
             , modified_by = #{trainerId}
             , modified_date = CURRENT_TIMESTAMP
         where terms_agree_id = (select terms_agree_id from temp)
    </update>

    <select id="selectPushSetByTrainerId" resultType="PushSetResDto">
        /* MyPageMapper.selectPushSetByTrainerId */
        select b.common_code_name as push_kind_name
             , a.push_kind
             , a.push_set_yn
          from push_set a
     left join common_code b
            on a.push_kind = b.common_code
           and b.grp_common_code = 'PUSH_KIND'
         where a.trainer_id = #{trainerId}
    </select>

</mapper>








