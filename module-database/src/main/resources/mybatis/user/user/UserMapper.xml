<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.fittnerserver.mapper.user.user.UserMapper">
    <select id="selectTrainerInfo" resultType="TestMybatisDto">
        select trainer_name as trainerName
          from trainer
    </select>

    <select id="selectTrainerByTrainerId" resultType="TrainerDto">
        /* UserMapper.selectTrainerByTrainerId */
        select trainer_id
             , trainer_name
             , trainer_email
             , trainer_phone
             , trainer_ci_no
             , trainer_fcm_token
             , trainer_sns_kind
             , trainer_status
             , center_id
          from trainer
         where trainer_id = #{trainerId}
           and trainer_drop_yn = 'N'
    </select>

    <select id="selectTermsForJoin" resultType="TermsResDto">
        /* UserMapper.selectTermsForJoin */
        select a.terms_id,a.terms_kind,a.terms_essential_yn
             , case when a.terms_essential_yn = 'Y' then  concat('(필수) ',a.terms_title)
                    else concat('(선택) ',a.terms_title)
                end as terms_title
             , b.file_url as terms_url
          from terms a
     left join file b
            on a.file_group_id = b.file_group_id
         where a.terms_state = 'ING'
    </select>
    <select id="selectMemberTicketDetailInfo" resultType="MemberDetailResDto">
       with ticket_info_view as (select
                                    a.member_id  as memberId
                                  , b.ticket_id as ticketId
                                  , a.member_name as memberName
                                  , c.trainer_product_name as productName
                                  , TIMESTAMPDIFF(MONTH, STR_TO_DATE(b.ticket_start_date, '%Y%m%d'),
                                                  STR_TO_DATE(b.ticket_end_date, '%Y%m%d')) as productMonth
                                  , c.trainer_product_count as productTotalCnt
                                  , c.trainer_product_count - b.ticket_use_cnt as productRemainCnt
                                  , b.ticket_start_date as ticketStartDate
                                  , b.ticket_end_date as ticketEndDate
                                  , sum(if(d.reservation_status = 'SIGN', 1, 0)) as attendanceCnt
                                  , sum(if(d.reservation_status = 'NOSHOW', 1, 0)) as absenceCnt
                                  , b.ticket_code as ticketCode
                             from member a
                                      inner join ticket b
                                                 on a.member_id = b.member_id
                                                     and b.ticket_delete_yn = 'N'
                                      left join trainer_product c
                                                on b.trainer_product_id = c.trainer_product_id
                                      left join reservation d
                                                on b.ticket_id = d.ticket_id
                                                    and d.reservation_status in ('SIGN', 'NOSHOW')
                                                    and d.reservation_delete_yn = 'N'
                             where a.member_id = #{memberId}
                             group by b.ticket_id
                            )
        select *
        from ticket_info_view
        where case when (select count(*) from ticket_info_view) > 1 then STR_TO_DATE(ticket_info_view.ticket_end_date, '%Y%m%d') >= CURDATE()
                   else 1=1
                  end
        ;
    </select>
</mapper>








